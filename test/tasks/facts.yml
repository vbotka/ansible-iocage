---
# Ansible managed

# Expect iocage to pass with expected message(s).
# Status:
# pass ..... module pass with expected message(s)
# fail ..... module pass without expected message(s)
# crash .... module crash

- ansible.builtin.set_fact:
    _crash: true

- name: "facts: Get all iocage_* facts by default"
  block:

    - name: " >>> TEST START: facts: Get all iocage_* facts by default"
      register: result
      iocage:
    - ansible.builtin.set_fact:
        _crash: false

    - ansible.builtin.debug:
        var: result
      when: debug2 | bool
    - ansible.builtin.debug:
        msg: |-
          iocage_releases = {{ ansible_facts.iocage_releases }}
          iocage_templates.keys() = {{ ansible_facts.iocage_templates.keys() | list }}
          iocage_jails.keys() = {{ ansible_facts.iocage_jails.keys() | list }}
          iocage_plugins.keys() = {{ ansible_facts.iocage_plugins.keys() | list }}
          iocage_states = {{ ansible_facts.iocage_states }}
      when: debug | bool

  rescue:

    - ansible.builtin.debug:
        var: ansible_failed_result
      when: debug | bool

    - ansible.builtin.import_tasks: custom_stats_crash.yml

- name: No crash
  when: not _crash
  block:

    - ansible.builtin.assert:
        fail_msg: "[ERR] {{ _test_name }}: Failed: {{ result.msg }}"
        success_msg: "[OK]  {{ _test_name }}: Passed: {{ result.msg }}"
        that:
          - not result.changed
          - not result.failed
          - result.stderr_lines | length == 0
          - result.stdout_lines | length == 0

    - ansible.builtin.import_tasks: custom_stats_pass.yml

  rescue:

    - ansible.builtin.debug:
        msg: |
          [ERR] {{ _test_name }} failed.
          {{ ansible_failed_task }}
          {{ ansible_failed_result }}
      when: debug | bool

    - ansible.builtin.import_tasks: custom_stats_fail.yml

# EOF
